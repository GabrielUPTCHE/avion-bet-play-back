events {
    worker_connections 1024;
}

http {
    upstream backend {
        # Configuración del load balancer con multiple servidores backend
        # least_conn: envia las peticiones al servidor con menos conexiones activas
        least_conn;
        
        # Instancias del backend
        server aviator-backend-1:4000 max_fails=3 fail_timeout=30s;
        server aviator-backend-2:4000 max_fails=3 fail_timeout=30s;
        server aviator-backend-3:4000 max_fails=3 fail_timeout=30s;
    }

    # Configuración para WebSockets
    upstream websocket {
        # Para WebSockets, es importante usar ip_hash para mantener la sesión
        # Esto asegura que un cliente siempre se conecte al mismo backend
        ip_hash;
        
        server aviator-backend-1:4000 max_fails=3 fail_timeout=30s;
        server aviator-backend-2:4000 max_fails=3 fail_timeout=30s;
        server aviator-backend-3:4000 max_fails=3 fail_timeout=30s;
    }

    # Configuración del servidor
    server {
        listen 80;
        server_name localhost;

        # Configuración para archivos estáticos y API REST
        location / {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Configuración específica para Socket.IO
        location /socket.io/ {
            proxy_pass http://websocket;
            proxy_http_version 1.1;
            
            # Headers necesarios para WebSockets
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Configuración específica para Socket.IO
            proxy_buffering off;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts más largos para conexiones persistentes
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 300s;
        }

        # Health check endpoint (opcional)
        location /health {
            proxy_pass http://backend/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }

    # Configuración de logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Configuraciones generales
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Compresión
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/xml+rss
        application/json;
}